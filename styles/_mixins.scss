//@mixin fluid-text($max:48, $min:16){   //задали параметры минимального и максимального размеров шрифта для mixin fluid-text,который в свою очередь используется для расчета адаптивного шрифта
//font-size:clamp(#{$min}px, #{calc($max/1440)*100}vw, #{$max}px);
//}
@mixin fluid-text($max: 48, $min: 16) {
  font-size: clamp(#{$min}px, #{$max / 1240 * 100}vw, #{$max}px);
}

//clamp():
//#{$min}px — минимальный размер текста.
//#{$max / 1240 * 100}vw — промежуточное значение (рассчитывается пропорционально ширине экрана, где 1240px — условная ширина).
//#{$max}px — максимальный размер текста.
//Интерполяция `#{}: Используется для вставки значений переменных и результатов арифметических операций в строку.
//Работа с vw:
//#{$max / 1240 * 100} превращает значение в проценты для единиц vw, обеспечивая масштабирование в зависимости от ширины экрана.

@mixin reset-link{    //mixin для сброса свойств ссылки
  color:inherit;
  &,  //селектор
  &:hover{    //селектор:hover
    text-decoration: none;
  }
}

@mixin reset-button{  //mixin для сброса свойств кнопки
  padding:0;
  background-color:transparent;
  border:none;
}

@mixin flex-center($isInline:false){
  @if $isInline==true {
    display: inline-flex;
  } @else {
    display:flex;
    }
  justify-content: center;
  align-items: center;
  }

//миксин flex-center настроен для создания флекс-контейнера, который автоматически центрирует содержимое как по горизонтали, так и по вертикали.
// Он также позволяет переключаться между flex и inline-flex, используя параметр $isInline.

//Параметр $isInline:

//Принимает логическое значение (true или false).
//Если $isInline == true, устанавливается display: inline-flex, что делает контейнер флекс-элементом, который размещается в строке.
//Если $isInline == false (по умолчанию), устанавливается display: flex, и контейнер занимает всю доступную ширину.

//Центрирование содержимого:

//justify-content: center — выравнивает элементы по горизонтали.
//align-items: center — выравнивает элементы по вертикали.
//Логика через @if:

//Условие проверяет значение $isInline и выбирает соответствующее значение display.


@mixin abs-center{
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}

// миксин abs-center предназначен для абсолютного центрирования элемента по горизонтали и вертикали внутри родительского контейнера.
// Он работает за счёт комбинации position: absolute, задания координат top и left со значением 50%,
// и корректировки позиции с помощью transform: translate(-50%, -50%).

//position: absolute:

//Элемент позиционируется относительно ближайшего родителя с position: relative, absolute, fixed, или sticky.
//top: 50% и left: 50%:

//Сдвигают элемент в точку, где его верхний левый угол находится в центре родительского элемента.
//transform: translate(-50%, -50%):

//Сдвигает элемент на половину его ширины и высоты в обратную сторону, чтобы центр элемента совпал с центром родителя.

@mixin square($size){
  width: $size;
  aspect-ratio: 1;
}

// миксин square предназначен для создания квадратных элементов с фиксированным соотношением сторон,
// где высота равна ширине. Он делает это за счёт установки ширины элемента и использования свойства aspect-ratio: 1.

//$size:

//Принимает значение, которое задаёт ширину квадрата (например, 100px, 50%, 10rem и т.д.).
//aspect-ratio: 1:

//Устанавливает соотношение ширины к высоте как 1:1, что гарантирует, что элемент остаётся квадратным независимо от размеров контейнера.
//Простота:
//В отличие от подходов с использованием padding и других "трюков", aspect-ratio обеспечивает более удобный и современный способ управления пропорциями.

@mixin visually-hidden{
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border:0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}