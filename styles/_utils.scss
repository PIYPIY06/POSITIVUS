.container{
  max-width:calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline:var(--container-padding-x);
}

//max-width: Устанавливает максимальную ширину элемента. Элемент не может быть шире этого значения, но может быть уже.
//
//calc(): Позволяет вычислять значения прямо в CSS. В данном случае мы суммируем ширину контейнера и двойное значение отступов по оси X.
//
//var(--container-width): Используется CSS-переменная --container-width, которая должна быть определена ранее в коде. Она задаёт основную ширину контейнера.
//
//var(--container-padding-x): Ещё одна CSS-переменная, представляющая горизонтальные отступы (padding) контейнера. Она умножается на 2, так как отступ применяется с обеих сторон.

.visually-hidden{
@include visually-hidden;
}

//CSS-класс .visually-hidden используется для скрытия контента с экрана, при этом сохраняя его доступным для скринридеров.
// Это полезно, когда нужно добавить информацию на страницу, которая не должна отображаться визуально, но важна для людей с нарушениями зрения.
// Вот объяснение каждой части этого класса:
//
//position: absolute; — Убирает элемент из нормального потока документа, что позволяет ему располагаться в любом месте на странице.
//width: 1px; height: 1px; — Уменьшает размер элемента до минимального, фактически делая его невидимым.
//margin: -1px; — Сдвигает элемент на 1 пиксель за пределы обычного потока, чтобы он оказался вне экрана.
//border: 0; padding: 0; — Убирает любые отступы и границы вокруг элемента.
//white-space: nowrap; — Запрещает перенос текста внутри элемента, если он есть.
//clip-path: inset(100%); clip: rect(0 0 0 0); — Эти свойства обрезают элемент, делая его полностью невидимым (по сути, он становится «пустым»).
//overflow: hidden; — Предотвращает отображение содержимого, если оно выходит за пределы элемента.
//Этот метод часто используется для улучшения доступности: например, можно добавить текст, который будет слышен только для скринридеров, но не будет виден на экране.

.hidden-mobile{
  @include mobile {
    display: none !important;
  }
}

.visible-mobile{
  @include mobile-above{
    display:none !important;
  }
}